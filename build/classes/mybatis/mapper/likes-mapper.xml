<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="like">
<<<<<<< HEAD
	
=======
	<!--영화 좋아요 생성 -->
	<insert id="movieLikeCreate" parameterType="hashmap">
		INSERT INTO LIKEMOVIES(movieId,id,posterUrl) 
		VALUES(#{movieId}, #{id}, #{posterUrl})
	</insert>
	<!-- 영화 좋아요 불러오기  -->
	<select id="movieFindById" parameterType="string" resultType="data.LikeMovie">
		SELECT * FROM LIKEMOVIES WHERE id = #{id}
	</select>
	<!-- 특정 영화 좋아요 삭제 -->
	<delete id="movieLikeDelete" parameterType="hashmap">
		DELETE LIKEMOVIES WHERE id = #{id} AND movieId = #(movieId)
	</delete>
	
	<!-- 배우 좋아요 생성 -->
	<insert id="actorLikeCreate" parameterType="hashmap">
		INSERT INTO LIKEACTORS(actorId,id,posterUrl) 
		VALUES(#{actorId}, #{id}, #{posterUrl})
	</insert>
	<!-- 배우 좋아요 불러오기  -->
	<select id="actorFindById" parameterType="string" resultType="data.LikeActor">
		SELECT * FROM LIKEACTORS WHERE id = #{id}
	</select>
	<!-- 특정 배우 좋아요 삭제  -->
	<delete id="actorLikeDelete" parameterType="hashmap">
		DELETE LIKEMOVIES WHERE id = #{id} AND actorId = #(actorId)
	</delete>
	
	<!--감독 좋아요 생성 -->
	<insert id="directorLikeCreate" parameterType="hashmap">
		INSERT INTO LIKEDIRECTORS(directorId,id,posterUrl) 
		VALUES(#{directorId}, #{id}, #{posterUrl})
	</insert>
	<!-- 감독 좋아요 불러오기  -->
	<select id="directorFindById" parameterType="string" resultType="data.LikeDirector">
		SELECT * FROM LIKEDIRECTORS WHERE id = #{id}
	</select>
	<!-- 특정 감독 좋아요 삭제 -->
	<delete id="directorLikeDelete" parameterType="hashmap">
		DELETE LIKEDIRECTORS WHERE id = #{id} AND directorId = #(directorId)
	</delete>
>>>>>>> develop
</mapper>
